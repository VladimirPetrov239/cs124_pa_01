{\rtf1\ansi\ansicpg1251\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
As for the randomness, I believe it\'92s built inside in C++ (or whatever language is used). \
\
Obviously, the computer cannot be completely random: its set of operations is regularized by a finite number of commands, so the overall set of possible outcomes is no more than |Z| in cardinality, while Randomness assumes we would like to be able to generate, say, Uniform(0,1) which implies |R| outcomes \'97 strongly greater cardinal than that of integer numbers. \
\
Indeed, while using rand() in my program I had to reseed number generator in order to get other results\
(in case I would not call srand(param) with new param program would give same results). \
I used srand(124) since the task didn\'92t require us to arrive with different results each time, but if we would like to, we could use something like srand(time(0)), which would work differently each time since time always varies :)}